{"ast":null,"code":"var _jsxFileName = \"D:\\\\Coding\\\\project2\\\\crud-app-2\\\\client\\\\src\\\\pages\\\\ProjectById.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { ProjectDetails } from '../components/project_details/projectDetails';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ProjectManagement = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [project, setProject] = useState(null);\n  const [errorMessage, setErrorMessage] = useState('');\n  useEffect(() => {\n    const fetchProject = async () => {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        setErrorMessage('No token found. Please log in first.');\n        return;\n      }\n      try {\n        const response = await fetch(`/api/prj/${id}`, {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        const json = await response.json();\n        if (response.ok) {\n          setProject(json);\n        } else {\n          setErrorMessage(json.message || 'Failed to fetch project data.');\n        }\n      } catch (error) {\n        setErrorMessage('An error occurred while fetching the project.');\n        console.error(error);\n      }\n    };\n    fetchProject();\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"project\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project-information\",\n      children: [errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center text-red-600 error-message\",\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 34\n      }, this), project && /*#__PURE__*/_jsxDEV(ProjectDetails, {\n        project: project\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n_s(ProjectManagement, \"a7QJb+g/caCS6tS3T6qagoVX0lM=\", false, function () {\n  return [useParams];\n});\n_c = ProjectManagement;\nvar _c;\n$RefreshReg$(_c, \"ProjectManagement\");","map":{"version":3,"names":["useEffect","useState","useParams","ProjectDetails","jsxDEV","_jsxDEV","ProjectManagement","_s","id","project","setProject","errorMessage","setErrorMessage","fetchProject","token","localStorage","getItem","response","fetch","method","headers","json","ok","message","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Coding/project2/crud-app-2/client/src/pages/ProjectById.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { ProjectDetails } from '../components/project_details/projectDetails';\r\n\r\nexport const ProjectManagement = () => {\r\n    const { id } = useParams();\r\n    const [project, setProject] = useState(null);\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n\r\n    useEffect(() => {\r\n        const fetchProject = async () => {\r\n            const token = localStorage.getItem('token');\r\n\r\n            if (!token) {\r\n                setErrorMessage('No token found. Please log in first.');\r\n                return;\r\n            }\r\n\r\n            try {\r\n                const response = await fetch(`/api/prj/${id}`, {\r\n                    method: 'GET',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'Authorization': `Bearer ${token}`,\r\n                    },\r\n                });\r\n\r\n                const json = await response.json();\r\n\r\n                if (response.ok) {\r\n                    setProject(json);\r\n                } else {\r\n                    setErrorMessage(json.message || 'Failed to fetch project data.');\r\n                }\r\n            } catch (error) {\r\n                setErrorMessage('An error occurred while fetching the project.');\r\n                console.error(error);\r\n            }\r\n        };\r\n\r\n        fetchProject();\r\n\r\n    }, [id]);\r\n\r\n    return (\r\n        <div className=\"project\">\r\n            <div className=\"project-information\">\r\n                {errorMessage && <div className=\"text-center text-red-600 error-message\">{errorMessage}</div>}\r\n                {project && <ProjectDetails project={project} />}\r\n            </div>\r\n        </div>\r\n    );\r\n};"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,cAAc,QAAQ,8CAA8C;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,OAAO,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnC,MAAM;IAAEC;EAAG,CAAC,GAAGN,SAAS,CAAC,CAAC;EAC1B,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACU,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEpDD,SAAS,CAAC,MAAM;IACZ,MAAMa,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC7B,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAE3C,IAAI,CAACF,KAAK,EAAE;QACRF,eAAe,CAAC,sCAAsC,CAAC;QACvD;MACJ;MAEA,IAAI;QACA,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAAC,YAAYV,EAAE,EAAE,EAAE;UAC3CW,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE;YACL,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,UAAUN,KAAK;UACpC;QACJ,CAAC,CAAC;QAEF,MAAMO,IAAI,GAAG,MAAMJ,QAAQ,CAACI,IAAI,CAAC,CAAC;QAElC,IAAIJ,QAAQ,CAACK,EAAE,EAAE;UACbZ,UAAU,CAACW,IAAI,CAAC;QACpB,CAAC,MAAM;UACHT,eAAe,CAACS,IAAI,CAACE,OAAO,IAAI,+BAA+B,CAAC;QACpE;MACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZZ,eAAe,CAAC,+CAA+C,CAAC;QAChEa,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACxB;IACJ,CAAC;IAEDX,YAAY,CAAC,CAAC;EAElB,CAAC,EAAE,CAACL,EAAE,CAAC,CAAC;EAER,oBACIH,OAAA;IAAKqB,SAAS,EAAC,SAAS;IAAAC,QAAA,eACpBtB,OAAA;MAAKqB,SAAS,EAAC,qBAAqB;MAAAC,QAAA,GAC/BhB,YAAY,iBAAIN,OAAA;QAAKqB,SAAS,EAAC,wCAAwC;QAAAC,QAAA,EAAEhB;MAAY;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,EAC5FtB,OAAO,iBAAIJ,OAAA,CAACF,cAAc;QAACM,OAAO,EAAEA;MAAQ;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/C;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACxB,EAAA,CAhDWD,iBAAiB;EAAA,QACXJ,SAAS;AAAA;AAAA8B,EAAA,GADf1B,iBAAiB;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}